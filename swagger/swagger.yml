openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a simple Spoorkaart API documentation :)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0.0'
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://trein.wissehes.nl/api
tags:
  - name: trains
    description: Everything about trains/journeys
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: store
    description: Access to Petstore orders
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /trains:
    get:
      tags:
        - trains
      summary: Get all trains that are currently on the map
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trains'


components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
      xml:
        name: address
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag

    Trains:
      type: array
      items: 
        $ref: '#/components/schemas/TrainWithInfo'

    TrainWithInfo:
      type: object
      properties:
        treinNummer: 
          type: integer
          format: int32
        ritId: 
          type: string
        lat: 
          type: number
        lng: 
          type: number
        snelheid: 
          type: number
        richting: 
          type: number
        horizontaleNauwkeurigheid: 
          type: number
        type: 
          type: string
        bron: 
          type: string
        info: 
          type: object
          properties: 
            bron: 
              type: string
            ritnummer: 
              type: integer
              format: int32
            station: 
              type: string
            type: 
              type: string
            vervoerder: 
              type: string
            spoor: 
              type: string
            materieeldelen: 
              type: array
              items: 
                type: object
                properties: 
                  materieelnummer: 
                    type: integer
                    format: int32
                  type: 
                    type: string
                  faciliteiten: 
                    type: array
                    items: 
                      type: string
                  afbeelding: 
                    type: string
                  breedte: 
                    type: integer
                    format: int32
                  hoogte: 
                    type: integer
                    format: int32
                  zitplaatsen: 
                    type: object
                    properties: 
                      staanplaatsEersteKlas: 
                        type: integer
                        format: int32
                      staanplaatsTweedeKlas: 
                        type: integer
                        format: int32
                      zitplaatsEersteKlas: 
                        type: integer
                        format: int32
                      zitplaatsTweedeKlas: 
                        type: integer
                        format: int32
                      klapstoelEersteKlas: 
                        type: integer
                        format: int32
                      klapstoelTweedeKlas: 
                        type: integer
                        format: int32
                  bakken: 
                    type: array
                    items: 
                      type: object
                      properties: 
                        afbeelding: 
                          type: object
                          properties: 
                            url: 
                              type: string
                            breedte: 
                              type: integer
                              format: int32
                            hoogte: 
                              type: integer
                              format: int32
            ingekort: 
              type: boolean
            lengte: 
              type: integer
              format: int32
            lengteInMeters: 
              type: integer
              format: int32
            lengteInPixels: 
              type: integer
              format: int32
            debug: 
              type: array
              items: 
                type: string


    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header