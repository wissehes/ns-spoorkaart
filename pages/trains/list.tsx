import { faMagnifyingGlass } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import Head from "next/head";
import Link from "next/link";
import { useCallback, useEffect, useMemo, useState } from "react";

import NavBar from "../../components/NavBar";
import useStations from "../../hooks/useStations";
import useTrains from "../../hooks/useTrains";
import { TreinWithInfo } from "../../types/getTrainsWithInfoResponse";

const filterFunction = (t: TreinWithInfo, searchValue: string) => {
  return (
    t.type.toLowerCase().includes(searchValue) ||
    t.treinNummer.toString().includes(searchValue) ||
    t.info?.vervoerder.toLowerCase().includes(searchValue) ||
    t.info?.materieeldelen.find(
      (s) =>
        s.materieelnummer?.toString().includes(searchValue) ||
        s.type.toLowerCase().includes(searchValue)
    ) ||
    t.info?.station.includes(searchValue)
  );
};

const Home = () => {
  const [searchValue, setSearchValue] = useState("");

  const trains = useTrains(false);
  const stations = useStations();
  const getStation = useCallback(
    (id?: string) => {
      const station = stations.data?.find(
        ({ code }) => code == id?.replace("_0", "")
      );

      return station?.namen.kort || id || "?";
    },
    [stations]
  );

  const items = useMemo(() => {
    let searched = trains.data || [];
    if (searchValue.length < 1) return searched;

    searched = searched.filter((t) => filterFunction(t, searchValue));
    return searched;
  }, [searchValue, trains]);

  return (
    <div>
      <Head>
        <title>Treinen | NS Spoorkaart</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <NavBar />
        <div
          className="container"
          style={{ minHeight: "100vh", paddingBottom: "1rem" }}
        >
          <div className="box" style={{ marginTop: "1rem" }}>
            <h1 className="is-size-3">Treinen</h1>

            <div className="is-flex">
              <div className="field">
                <p className="control has-icons-left has-icons-right">
                  <input
                    className="input"
                    type="search"
                    placeholder="Zoek..."
                    value={searchValue}
                    onChange={(e) => setSearchValue(e.target.value)}
                  />
                  <span className="icon is-small is-left">
                    <FontAwesomeIcon icon={faMagnifyingGlass} />
                  </span>
                </p>
              </div>
            </div>
            {(trains.isLoading || stations.isLoading) && (
              <div className="is-flex" style={{ justifyContent: "center" }}>
                <progress
                  className="progress is-large is-info"
                  style={{ maxWidth: "50%" }}
                  max="100"
                >
                  60%
                </progress>
              </div>
            )}
            <table className="table is-hoverable is-fullwidth">
              <thead>
                <tr>
                  <th>Vervoerder</th>
                  <th>Type</th>
                  <th>Materieel</th>
                  <th>Nummers</th>
                  <th>Snelheid</th>
                  <th>Station</th>
                  <th>Info</th>
                </tr>
              </thead>
              <tbody>
                {items.map((t) => (
                  <tr key={t.treinNummer}>
                    <td>{t.info?.vervoerder}</td>
                    <td>{t.type}</td>
                    <td>
                      {t.info?.materieeldelen.map((t) => t.type).join(", ")}
                    </td>
                    <td>
                      {t.info?.materieeldelen
                        .filter((t) => t.materieelnummer)
                        .map((t) => t.materieelnummer)
                        .join(", ")}
                    </td>
                    <td>{Math.round(t.snelheid)} km/u</td>
                    <td>{getStation(t.info?.station)}</td>
                    <td>
                      <Link href={`/journey/${t.treinNummer}`}>
                        <a className="button is-primary">Info</a>
                      </Link>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
